package generate;

import java.awt.Toolkit;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import java.awt.Dimension;
import java.io.*;
import java.security.*;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2008</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
public class GSig {
    boolean packFrame = false;

  /*  public static void saveToFile (byte[] info, String filename)

              {

                    try

                    {

                          FileOutputStream fos = new FileOutputStream(filename);

                          fos.write(info);

                          fos.close();

                    }

                    catch (Exception e)

                    {

                          System.err.println("Caught exception " + e.toString());

                    }

          }// saveToFile ()*/


    /**
     * Construct and show the application.
     */
    public GSig() {
        Frame1 frame = new Frame1();
        // Validate frames that have preset sizes
        // Pack frames that have useful preferred size info, e.g. from their layout
        if (packFrame) {
            frame.pack();
        } else {
            frame.validate();
        }

        // Center the window
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = frame.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        frame.setLocation((screenSize.width - frameSize.width) / 2,
                          (screenSize.height - frameSize.height) / 2);
        frame.setVisible(true);
        try {
            jbInit();
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }

    /**
     * Application entry point.
     *
     * @param args String[]
     */
    public static void main(String[] args) {
      //try

           // {

                  /* Генерация ключей */

                //  KeyPairGenerator keyGen = KeyPairGenerator.getInstance("DSA", "SUN");

                  //SecureRandom random = SecureRandom.getInstance("SHA1PRNG", "SUN");

                 // keyGen.initialize(1024, random);

                 // KeyPair pair = keyGen.generateKeyPair();

                 // PrivateKey priv = pair.getPrivate();

                 // PublicKey pub = pair.getPublic();

                  /* Создание объекта класса Signature */

                 // Signature dsa = Signature.getInstance("SHA1withDSA", "SUN");

                  /* Инициализация частным ключом */

                 // dsa.initSign(priv);

                  /* Чтение данных из файла "data". Вызов метода update() */

                  //FileInputStream fis = new FileInputStream("data");

                 // BufferedInputStream bufin = new BufferedInputStream(fis);

                 // byte[] buffer = new byte[1024];

                 // int len;

                 // while (bufin.available() != 0)

                  //{

                       // len = bufin.read(buffer);

                      //  dsa.update(buffer, 0, len);

                 // }

                 // bufin.close();

                  /* Генерация подписи */

                 // byte[] realSig = dsa.sign();

                  /* Сохранение подписи в файл "signature" */

                 // saveToFile (realSig,"signature");

                  /* Сохранение открытого ключа в файл "pubkey" */

                 // byte[] key = pub.getEncoded();

                  //saveToFile (key,"pubkey");

           // }

           // catch (Exception e)

           // {

               //   System.err.println("Caught exception " + e.toString());

           // }


        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.
                                             getSystemLookAndFeelClassName());
                } catch (Exception exception) {
                    exception.printStackTrace();
                }

                new GSig();
            }
        });
    }

    private void jbInit() throws Exception {
    }
}
